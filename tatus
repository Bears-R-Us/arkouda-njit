[33maaaf1240[m[33m ([m[1;36mHEAD -> [m[1;32mwcc_requests[m[33m)[m UIUC request to removeDegreeOne
[33m63fd3855[m[33m ([m[1;31morigin/wcc_requests[m[33m, [m[1;31morigin/wcc_mincut[m[33m, [m[1;31morigin/main[m[33m, [m[1;31morigin/cypher[m[33m)[m Merge pull request #132 from Bears-R-Us/parallel_wcc_with_cc
[33m6609378c[m removed unnecessary output folder
[33maad2cf60[m updated documentation
[33m55015911[m refactored wcc
[33me095d668[m fixed cc in wcc
[33m31363697[m integrated cc
[33m82d099fe[m version3.0 stable & fast
[33m5e0b1723[m Fastest version before new CC integration
[33m20c48fae[m 35 percent Fastr than before + SET base functions stablished.
[33m29b33aee[m Stable, Set completly applied. Same performance ab before.
[33m853da4ca[m Working version after SET. ready to performance tests!
[33m8f0c7b02[m Working on my calculateClusterDegree
[33m0e46fc63[m in this code everything is based on set. NOt working
[33md3191953[m Cluster object removed. 2 new function C2D and removeDegreeONe added
[33m9e7c9d72[m Before SET ide:
[33m1002fc4a[m set intersection method
[33m665bf56d[m notebook update
[33mb102d25d[m cluster output
[33m49d69c5b[m Before Fixing the output
[33mc5ff8242[m Last version before decide which ont  to be merged
[33mb2a51c27[m a little faster than Min's code
[33mfb4aca1e[m As Fast As Min's code
[33m110c7eb2[m As Fast As Min's code
[33md2e809f8[m Test with memory dump
[33m720cec0c[m initial parallel wcc
[33m1c9a46a5[m[33m ([m[1;31morigin/subgraph_isomorphism_SI[m[33m)[m Merge pull request #131 from Bears-R-Us/wcc
[33m0e83d343[m[33m ([m[1;31morigin/wcc[m[33m)[m updated notebook
[33m9013a0f3[m use two-core decomposition
[33mc08075bb[m tsv file reader
[33mae35043e[m doc updates
[33m957c8490[m Final seq version of WCC
[33me3ad4e00[m for Oliver
[33m9e428fbf[m last version after set problem
[33m2d7dc532[m Last version Sep 29
[33m94d6c34a[m Changed till 18:43
[33m2d98da74[m beautified wcc
[33meb88972a[m working wcc
[33mf03b2852[m updated README instructions for constrained-clustering
[33m0edbfbdc[m updated readme
[33m23d345b8[m updated readme
[33m2bb23ee6[m fixed wcc call
[33mdd1376e1[m seg fault in computeMinCut.cpp
[33mcc561a58[m wcc initial -- updated README instructions
[33m49e9753d[m enables switch between "and" and "or" checking (#129)
[33m38e69dba[m Merge pull request #128 from Bears-R-Us/compatibility_updates_akv2024.06.21_chapelv2.1.0
[33m74b27745[m[33m ([m[1;31morigin/compatibility_updates_akv2024.06.21_chapelv2.1.0[m[33m)[m arkouda v2024.06.21 and chapel 2.1.0 compatibility
[33m2286a658[m Diameter (#126)
[33m61487665[m proper fastLocalSubdomain fix (#124)
[33mba4d2977[m fixes fastLocalSubdomain (#123)
[33meec2b169[m Updated graph matching (#117)
[33m30d80453[m New Sample and Release (#116)
[33m80a993b5[m Updated tests (#115)
[33ma5d69ce7[m integrated k_truss (#114)
[33m9b468025[m Integrated diameter function from arachne_development (#113)
[33medd476bb[m added connected components (#112)
[33m5e22d5a4[m match main win current best subgraph isomorphism (#111)
[33m2e6562d0[m Fix DistBag and other syntax problem to follow Chapel 2.0 (#110)
[33mc247151b[m Merge pull request #109 from Bears-R-Us/attribute_checking_refactor
[33mca62daff[m[33m ([m[1;31morigin/attribute_checking_refactor[m[33m)[m Updated subgraph isomorphism with new attribute checking procedure
[33m7b840c14[m Merge pull request #108 from Bears-R-Us/compatibility_and_general_fixes
[33m193adc1f[m[33m ([m[1;31morigin/compatibility_and_general_fixes[m[33m)[m ensure compatibility with chapel 2.0 and arkouda v2024.03.18      fix bugs with matrix market file reading and loading node and edge attributes withou specified label or relationship columns
[33me24f73d2[m Merge pull request #107 from Bears-R-Us/sparse_and_replicated_sym_entries
[33m845ce8f2[m[33m ([m[1;31morigin/sparse_and_replicated_sym_entries[m[33m)[m minor bfs changes
[33mbc210478[m added ranges convencience procs
[33m090d7910[m Merge pull request #106 from Bears-R-Us/ranges_to_sym_entry
[33mee66aafd[m[33m ([m[1;31morigin/ranges_to_sym_entry[m[33m)[m changed ranges to be stored in a SymEntry
[33m5fc15eb9[m Merge pull request #105 from Bears-R-Us/ranges_fix
[33m4e1bb17f[m density functions (#104)
[33me62c50b7[m fixes distributed breadth-first search
[33mb8d44f8c[m density functions (#104)
[33mcba2a718[m Merge pull request #102 from Bears-R-Us/support_categoricals
[33mc0a7a60b[m[33m ([m[1;31morigin/support_categoricals[m[33m)[m add support for categoricals in property graphs      For labels and relationships, if they are Strings, automatic conversion is enabled to convert those columns to Categoricals.
[33m47ac3192[m Modularize Graphs Better and Fix Distributed BFS Issues
[33m16d559ef[m changes for first issues (porting generators.py) (#94)
[33m1cb57e3a[m Merge pull request #93 from Bears-R-Us/parallel_recursive_subgraph_isomorphism_integration
[33mda9cc95d[m[33m ([m[1;31morigin/parallel_recursive_subgraph_isomorphism_integration[m[33m)[m ADDS parallel, recursive subgraph isomorphism replacing sequential version
[33ma2e82cdd[m Merge pull request #92 from Bears-R-Us/fix_attribute_loading
[33m6b94a4bc[m FIXED attribute loading issues
[33m07394624[m add UP algorithm for connected component (#89)
[33m9247e09a[m fix bug in diamter and add benchmark for diameter (#88)
[33m252a04cc[m Merge pull request #86 from Bears-R-Us/compilation_warnings
[33m260ad5d9[m[33m ([m[1;31morigin/compilation_warnings[m[33m)[m update sample to notebook, removed warnings chapel 1.33 and 1.33, updated release metadata
[33mab3bf6b4[m Subgraph Isomorphism Integration  (#83)
[33m60bd0798[m Merge pull request #82 from Bears-R-Us/triangle_centrality_refactor
[33mf95caf6c[m[33m ([m[1;31morigin/triangle_centrality_refactor[m[33m)[m CHANGED methods.py, TriangleCentrality.chpl, algorithm_test.py      Made some documentation changes and updated unit tests to include triangle centrality now.
[33md593ede5[m CHANGED TriangleCentrality.chpl       Fixed bug in calculating wrong triangle centralities.
[33m25815afa[m CHANGED TriangleCentrality.chpl
[33m15f2e0f8[m ADDED TriangleCentrality.chpl, TriangleCentralityMsg.chpl      Changed some deprecated code in other functions.      Started refactoring of triangle centrality. Executes without errors, but returns the wrong triangle centralities.
[33m520a2e3a[m Merge pull request #81 from Bears-R-Us/property_storage_optimizations
[33m3095f726[m ADDED digraphclass.py, graphclass.py     This finalizes the refactoring of the property graph data structure to an array-centric data structure.
[33m4fb34c06[m Diameter (#80)
[33m14de7121[m FINALIZED all proeprty graph building methods      Server-side code for adding labels, relationhips, and properties using array-based storage now exist.      Working on fixing function for finding paths of length one.
[33m16b047ef[m FIXED bug with adding edge relationships      Must finish unit tests
[33m9cf12e5d[m FINISHED refactoring add_relationships, add_labels, and property adding functions      BUGS with adding relationships, must be checked      Start brainstorming ideas for multigraphs      WRITE UNIT TESTS
[33m7ce008f8[m ADDED generalized attribute insertion method      Still have to finish testing node attribute and label adding, then code edge relationship method based off new node label one, finish with unit tests
[33ma7ad616c[m ADDED ability to add multiple label colums      This should also be extended to edge relationships and called from load_node_attributes and load_edge_attributes
[33m9833bb3d[m CHANGED a lot      removed a lot of deprecated property graph functions      refactored property graph to be sleeker with less class variables and methods      removed corresponding deprecated chapel functionality      removed SymEntry2D since it is no longer needed      Brought property graph class to its own file
[33m46d4cbbd[m STARTED queryEdgeAttributesMsg       TODO: figure out how to handle extracting different types of symbol table entries.
[33m1524953e[m ADDED EDGE_PROPS_TO_SYM_TAB_ID map      This map tracks (property name, int) : symbol table id
[33m43fc6596[m Merge branch 'main' into property_storage_optimizations
[33m58be717f[m ADDED reversed arrays for directed graphs to find in-neighbors in constant time (#79)
[33m5ee08433[m Merge branch 'main' into property_storage_optimizations
[33m633eb732[m fix the ref warnings in all chapel code (#78)
[33m85501c81[m CHANGE GraohArray.chpl and PropertyGraphMsg.chpl      Add new classes that wrap `SegStringSymEntry` to store string properties in the same way Arkouda stores strings.      TODO: finish implementing map (property name, relationship identifier) : (symbol table identifier) to track data
[33mf80669bd[m ADD loading edge attributes from dataframe      Unit tests need to be written      Sparse addition needs to be fully tested      Maps to store (property name, relationship name) to (pdarray (id)) need to be implemented for both Chapel and Python
[33m4de93fb2[m fix bugs in CC algorithm (#77)
[33m2f412f12[m Multilocale Optimization Algorithm for CC (#73)
[33mb174766b[m[33m ([m[1;31morigin/temp[m[33m)[m Output Filename  (#72)
[33maeda8ad4[m started load edge properties method
[33mca612a9a[m Fix bugs in distributed version  (#71)
[33mb7f87849[m Ups- a new min update, propogation and synmetrization algorithm  (#70)
[33m6a8ce2b6[m Mergedversion: Merging Oliver's released version code with the development code (#69)
[33m0c7b482c[m property code timings
[33m5458e9d5[m node property timings
[33m7ada5626[m Merge pull request #68 from Bears-R-Us/triangles_and_API_refactor
[33m71638207[m finished triangles refactor and unit tests
[33m18a6a419[m updated tri count -- PERFORMANCE ISSUES!
[33m3b113c01[m update triangles docs and start API refactor
[33mb9308b7d[m Merge pull request #65 from Bears-R-Us/remove_R
[33mb06d089b[m remove r and add in new benchmark
[33m5a3fab24[m fix the compiling errors in arkouda_development when new arkouda vers… (#64)
[33m36159e74[m Merge pull request #63 from Bears-R-Us/alvaradoo-patch-1
[33m18b1b9a2[m Update README.md
[33m39387e57[m Merge pull request #62 from Bears-R-Us/prop_graph_fixes
[33m6cebc523[m remove debugging writeln
[33m67ac1a71[m Merge pull request #61 from Bears-R-Us/prop_graph_fixes
[33m74634dfa[m fixed changes that broke compatibility with Chapel 1.31
[33m04e70871[m Merge pull request #60 from Bears-R-Us/update_conn_comps_and_add_rev_array_reading
[33mbc63bde8[m update connected components and add graph building for reverse array algorithms
[33mefce1081[m Merge pull request #59 from Bears-R-Us/edge_property_storage_and_querying
[33mde11fb13[m insert and query edge properties
[33m7c773cdd[m Merge pull request #58 from Bears-R-Us/node_property_storage_and_querying
[33ma664f306[m finish node property querying for different data types, modify arachne sample slightly
[33mbfb2e07e[m implemented greater than query for float for node properties: ALL WORK FOR EDGE PROPERTIES MUST BE DONE
[33m4011aba8[m finalized storing node properties
[33m5bbdccac[m Merge branch 'main' into property_storage
[33m7a235d74[m Merge pull request #57 from Bears-R-Us/four-cycles
[33m9b0154e4[m fix vertex property casts and remove class helper methods
[33mb238d1ab[m change const refs to refs
[33m185252e4[m squares sequential finished
[33m843066ba[m added node property storage for various types; TODO: edge_properties, benchmarks, pytests
[33m15c80b0e[m initial property data structure, more is needed to fix bugs in actual storage lines
[33m626e294e[m square counting beginnings
[33m6786dbbd[m Merge pull request #56 from Bears-R-Us/alvaradoo-patch-2
[33mb89532cd[m Update README.md
[33m5902633c[m Merge pull request #55 from Bears-R-Us/alvaradoo-patch-1
[33ma5659f03[m Update README.md
[33md07ea36e[m Merge pull request #54 from Bears-R-Us/repo_structure_changes
[33m379d3f4e[m update version number for release
[33m2e51cf1f[m moved old sample files to benchmarks and created new in-depth sample script
[33m2163a573[m finish property graph tests
[33m6d1dc68e[m Merge branch 'main' into repo_structure_changes
[33mffaa2de9[m Merge pull request #53 from Bears-R-Us/one_path_and_property_storage
[33m68079b6b[m Merge branch 'main' into repo_structure_changes
[33m3bce9e12[m change bfs benchmark, add in one_path, and start prop graph tests
[33m3fa03a6e[m Merge pull request #52 from Bears-R-Us/chapel-1.32.0-compat
[33mc08a6691[m ensure compatibiltiy with 1.32.0
[33m12d11d7c[m updated bfs benchmark
[33m25b9b3e4[m print out timings
[33m28992fb3[m Merge pull request #51 from Bears-R-Us/versioning-updates
[33m679708b7[m Update README.md
[33m683ec46c[m modified bfs benchmark and arachne readme
[33m152ca416[m update gitignore
[33m4f65d822[m better querying
[33md80f3ee4[m Merge pull request #50 from Bears-R-Us/property_graph_prod
[33m1077e3b7[m make arachne compatible with new version of arkouda and add in property graph code
[33m00c5e55a[m Merge pull request #49 from Bears-R-Us/alvaradoo-patch-1
[33m1190dd49[m Update README.md
[33m9f6f4015[m[33m ([m[1;31morigin/property_graph_hpec23_experiments[m[33m)[m experiment code
[33m9caf1322[m Merge pull request #48 from mdindoost/SubGraphIso
[33m87b30fc2[m My Branch added to repo
[33mac3ca158[m finished initial query functions
[33mb1e5d498[m adding functionality to get the edge relationships and node labels of the graph
[33m1cf1b05f[m subgraph isomorphism integration -- all code in figure out segmentation faults
[33m0a8e19e8[m added support for edge relationships for DIP-SLL
[33m31766afd[m changed add_node_labels steps: vertex id and label name changing happens first now
[33mf583f121[m original vertex name conversion to internal id in addNodeLabels was offloaded to Arkouda
[33mceb63df6[m modified binary search to work for a given range
[33m9a30a09d[m distributed memory binary search implemented
[33mb386ede3[m Merge pull request #47 from Bears-R-Us/tmp
[33m3ccbabf3[m Merge pull request #44 from Bears-R-Us/lcs
[33md67e88b2[m Merge branch 'lcs' into main
[33m4642638c[m Merge branch 'main' of github.com:Bears-R-Us/arkouda-njit into main
[33m7cb9bb45[m dist memory binary search started
[33mb4d0faf3[m reduced thread contention in parallel loops in adding node labels -- MUST REDUCE COMMUNICATION FURTHER
[33m063fc247[m Merge branch 'main' into property_graph_updates
[33m09899883[m Merge branch 'main' into property_graph_updates We want the new data structure and functionality in here as well.
[33m00d9a2c0[m Merge pull request #46 from Bears-R-Us/alvaradoo-patch-1
[33m5d552b93[m Update README.md
[33m87ddb08c[m Merge pull request #45 from Bears-R-Us/graph_building_updates
[33m6e1bcba0[m final checks for BFS for august 16 2023 release
[33mbcca7500[m finished aggregated matrix market file function and unit tests
[33ma2ba0074[m finished class tests, new degree function, and matrix market file chapel code -- NEED TO DO MM FILE TESTS
[33m05949a3d[m fix one bug in counting
[33m599c9440[m finish bfs, building, and info tests
[33mae473498[m remove the print information
[33ma2cee6ec[m update sequential LCS
[33mebbb74df[m removed old tests, fixed bfs tests, fixed directed graph reading
[33m10764635[m started tricnt refactoring and added in directed graph building
[33ma0b3e2a9[m Merge branch 'main' of github.com:Bears-R-Us/arkouda-njit into main
[33m028dec0d[m LCS (#43)
[33m09884aaf[m resolve conflict
[33mfd0c67fe[m  confirm update
[33mb68bd557[m remove nei and finish prod bfs
[33ma85eec5b[m update LCS
[33m6f27ae48[m add print information for lcs to debug
[33m0f22837d[m better modularized bfs and other changes
[33mcfd0868a[m update LCS integration code
[33m9c12b98a[m modified add edges from for directed and property graphs
[33m9e7bbe11[m add lcs test
[33m901347b6[m finished arkouda-based input method for symmetrized undirecyed graphs
[33mc0bf012f[m finished python function and editing the sample file, however we still need reversed arrays to work with current kernels and set_neighbor function is really slow
[33me2ddd6ba[m flipped vertex remap and edge de-dupping/looping, has to be integrated fully
[33mee4ac499[m add lcs function at both side
[33m942159d4[m functionalized python building function, need to remove prints
[33m191498e3[m fix bug
[33mefa751da[m update the order of different contour algorithms
[33mfa5ec24e[m notebook from meeting transfered yesterday, can be used for func
[33ma0778973[m exchange the orger of CC algorithm
[33md408fb2e[m took out writing of size lines
[33mf9abe0db[m add mm method
[33m4380a78f[m update some connected components code (#36)
[33m59d6f332[m change position of some script
[33m2081ea72[m check the performance of 11mm and 1m1m
[33m5761191e[m add 1mm and 1m1m algorithm
[33m4de20edd[m write 1m1
[33m89acf27e[m add 1-m-1 algorithm
[33m3de70709[m update script
[33m9eccf315[m remove conflict
[33m7e280201[m minor
[33mf229f3e1[m update file list
[33m7b4b10bb[m optimize the depth of contour
[33mdbf3d65c[m fix read error
[33mffacc8f1[m versions for benchmarking
[33me51a1c3d[m ake sure changes
[33mce08f5b3[m Merge branch 'unionfind' of github.com:Bears-R-Us/arkouda-njit into unionfind
[33m4663a8e2[m modify the parameter of contour
[33mbacf03e0[m recover skipline in preprocessing.missed for unknow reason
[33m36c33a4e[m recover skipline in preprocessing.missed for unknow reason
[33m6c5eaa10[m fix rewrite data
[33mb5d41969[m update preprocessing
[33m607505b0[m fixed 2d array looping
[33m223151f8[m add script for CC algorithm
[33m7fceff0a[m update batch_cc.py
[33mb4170d72[m finished all methods, testing incoming
[33m489ec712[m fix bfs bugs
[33mc892aad8[m Merge pull request #35 from Bears-R-Us/unionfind
[33m0ab5779c[m add road usa graph into benchmark
[33m0b6a1985[m update functions
[33ma50dd802[m update unite function
[33m52becbda[m add union find algorithm for CC
[33ma8efb1e1[m finished all functions for DIP-SLL and adding node labels and edge relationships for DIP-DLL just need to finish same for DIP-ARR and the query functions
[33m33c9dfe7[m compartmentalizing test code better
[33mc43b8ccc[m add new simple tests file
[33m53bfabd2[m querying nodes and edges added for DipSLL
[33m00fa8bf5[m made files for separate testing of types, STILL NEED TO FINISH POPULATING
[33m3b22fe17[m querying prototypes
[33md4f9b267[m byte label array implemented
[33m2de6ded4[m doubly linked list parallelized, byte vector todo
[33m1d6e42b0[m distributable doubly-linked list for node labels
[33m63ee95c7[m Merge pull request #33 from Bears-R-Us/update1
[33m1b8ffe5e[m update the old package using method
[33m72c28378[m  add __init__.py
[33mcada29d3[m update the package name in testing files
[33me02965bf[m Merge pull request #30 from jakobtroidl/main
[33m7725757b[m Merge pull request #31 from Bears-R-Us/arachne_development_update
[33m0d099c83[m fix pathing issue
[33m1f4e1f5e[m Update README.md
[33mdb49c342[m Update README.md
[33m8c990349[m Merge pull request #29 from Bears-R-Us/sanbox-prod-partitioning
[33m4ccb85ad[m Merge branch 'main' into sanbox-prod-partitioning
[33m8c521b1c[m updated tri count
[33mc30985ad[m dev instructions
[33m55278abc[m fixed bug in sorting edge weights
[33m71a34bb4[m pip3
[33mef2c5d18[m update internal arachne readme
[33m8c1a66af[m redirection to arachne
[33mf538ec78[m Delete .DS_Store
[33m373f3538[m updated typos
[33m9fda9b86[m change bolding
[33mb3785652[m modified installation commands
[33m0e0fb699[m change prereq wording
[33m75f0e558[m changed installation title
[33m1c4a0db2[m updated README
[33m584ab0ad[m updated doc and restructured arkouda-development
[33m74303265[m slight update
[33m805735cc[m folder configuration and README updates
[33m04f6465e[m remove two lines in TriCnt, bugs
[33m5ddbb546[m Merge pull request #26 from Bears-R-Us/code-module-overhaul
[33m7503af01[m unit tests & documentation updates
[33m3fae6f40[m unit tests & documentation update
[33mcd0427c5[m modify binSearchE in vertex triangle counting
[33m6303ec32[m update the find_edge function in vertex triangle counting
[33m654007ed[m remove subTriSum[here.id]=triCount
[33mc5811e68[m fix initialization bug
[33m343c0ba7[m fix the but in return_count
[33mdaf9c008[m algorithm tests
[33m3914bcf2[m fix bug-add another pass for min-search based triangle counting
[33mb50c2aa8[m add the minimum search method to vertex based triangle counting
[33m1aa6e3fe[m remove the bug in triangle counting merge path method and unnecessary code for vertex based triangle counting
[33mffa7fa2e[m module overhaul
[33m32e85a0b[m Merge pull request #25 from Bears-R-Us/graph_filter
[33mb79e8c22[m pre-unit test subgraph_view
[33m32fd3a50[m modified frontend filter, must do backend
[33m1bb4dbb3[m initial filter messages
[33m46631d18[m Merge pull request #24 from Bears-R-Us/string-to-tuple
[33m7cba0897[m changed storing list of strings to list of tuples of strings for properties
[33ma0674f6a[m Merge pull request #23 from Bears-R-Us/degree
[33m05d41512[m return degree view as tuple
[33mf06359b4[m test (#22)
[33mfb128d46[m merge in-out degree  (#21)
[33m35936743[m updated degree msg code (#20)
[33m67907079[m added degree functionality (#19)
[33m58a0e29a[m modified readme and added simple test file (#18)
[33mcc2c848e[m Merge pull request #17 from alvaradoo/main
[33mbcaea8f4[m prod and property graph arachne
[33mcf5f6bb3[m modify graph data structure
[33m8605edd3[m add attribution method
[33mdaf8f4d8[m add attribution method
[33m1e0aaaaf[m add attribution method
[33m8a6d0bc4[m Merge branch 'main' of github.com:Bears-R-Us/arkouda-njit into main
[33m8151139f[m add attribution method
[33m043fdbb4[m change as-caida20071105.txt.pr
[33m8b49c3e4[m add some script
[33m3f215e04[m fix some interface problem
[33mc95b42ed[m solve conflict in trictr.py
[33mfdd75c7f[m remove the old bug in triangle centrality code
[33m8e05f3b4[m remove comments
[33m3aa09193[m update some interface
[33mbe8b91fe[m add property python interface
[33md6d04d41[m update RMAT based on weight and vertex array function
[33m8fc19ce4[m update build graph from array function
[33m68458d7c[m update read mtx function based on the weight update version
[33m7875b2da[m update preprocessing based on graphfileread
[33mbd8a297d[m commont out input flag for weight
[33ma9f3c435[m add vertex tracking and weight in graph file read
[33mfb3bbd3b[m add triangle counting introduction
[33m821d51fd[m fix the triangle counting interface
[33m81b3d178[m remove context
[33m87d7ce3d[m change interface for triangle counting and add edges in graph
[33m362dd67e[m update cc method
[33m0224b411[m tmp version for Oliver check
[33m5d49e4c1[m fix bug
[33mf6be895e[m update CC fixed order algorithms to asynchronization
[33md0111cf9[m update CC fixed order algorithms to asynchronization
[33m0c7ae002[m update CC fixed order algorithms to asynchronization
[33m516cc7ea[m update BFS output
[33m5242ccc0[m remove LockFreeStack module
[33m8f10e7fa[m fix conflict rewritedata.py
[33m5ace89f6[m fix the bug in combine sort
[33me0300a31[m add rewritedata
[33m1fceff2a[m add bat rewrite data
[33mb37debb8[m fix bugs in preprocessing
[33mfc9da948[m update the hash method for Jaccard
[33m38fade31[m add debug info
[33m845c8163[m fixed the write race problem in hash method
[33m5fcff62d[m update Jaccard hash method
[33m479df391[m fix the array to symbol bug
[33m2d8cfe04[m update the interface according to the latest arkouda's requirement
[33m2104c5a8[m update the interface according to the latest arkouda's requirement
[33m9e804afc[m add the hash method of Jaccard Coefficients
[33m27624fa4[m update rcm_flag bug
[33me95145eb[m Optimize the execution order of our CC algorithm
[33m521638e1[m Optimize the execution order of our CC algorithm
[33md80629a4[m update our entry definition according to arkouda's update
[33m46c0db25[m  remove zero points in degree statistics in preprocessing function
[33m19cbe66d[m update the preprocessing function
[33mafd9092a[m update the preprocessing function
[33m742381d5[m add degree distribution file output in preprocessing function
[33mf0d4e6f0[m update max-truss and graph client
[33m5a5a0427[m add synchronization and cas comparison methods in CC
[33m7ff4991e[m update CC's minimum calculation
[33mfeceb9ad[m update fs_dist
[33m7c5e78d4[m optimize the converged cases in CC
[33m316fd3e0[m Merge branch 'main' of github.com:Bears-R-Us/arkouda-njit into main
[33mec9b3803[m remove bugs in client
[33m454a212f[m  update interface at both python and chapel
[33m32f77c12[m Merge pull request #12 from alvaradoo/main
[33m72552aa6[m Merge branch 'main' of https://github.com/alvaradoo/arkouda-njit into main
[33m99bb126c[m add path merge to base triangle counting code
[33mb0a943a7[m  add test code for edge to graph
[33m43b60088[m add array to graph function in bakc and front end
[33md91743e5[m update CC code
[33mb8597854[m optimize the atomic method in CC
[33m3e5d4ed6[m add atomic 2 in CC
[33md34e9146[m update align1 code
[33m73f41275[m update align1 code
[33m053e0c6e[m update the value of constant in CC
[33med5d9953[m update align1 in CC
[33mef7e492a[m fix atomic bug in CC
[33mad3f1235[m add atomic to CC
[33m8aa3ea10[m add one step comparison in CC
[33m0529acc7[m add one step comparison in CC
[33me6ceb776[m update align1 in CC
[33m7f681f65[m add comparison function in CC
[33ma867b6b6[m add alinged1 version for cc
[33mbf9c4afc[m modify search function
[33m42c5fc18[m update alinged method in CC
[33md0acc8dc[m fix multilocale problem in CC
[33m14002035[m only keep undirected graph in cc
[33m14c0ebd5[m remove print
[33mf7084f5d[m add alinged method for CC
[33mbe3129d4[m fix a bug
[33m8b7732ff[m fix a bug
[33m1b6746d6[m optimize very small k in maxt truss
[33m9003004c[m fix Max Truss kUp assignment
[33m7d616dc3[m fix kup problem
[33m44c869c9[m update parameters
[33m9e42b918[m add truss_bat.py
[33mf37d3553[m update parameters
[33m78b392df[m fix bugs in  max truss
[33maa94c8c1[m fix bugs in  max truss
[33mff218924[m jump in search
[33m41cd001e[m optimize CC
[33m5ce1f3e3[m multiple cases for CC
[33mded99114[m update CC's fast spreading
[33mdcb20b62[m update our SymEntry definition to remove error
[33m4d337398[m increase locality by reducing f's depth in connected components
[33m444b3234[m fix graph Entry class
[33ma0848f95[m update max truss
[33m4ac4de74[m max-truss method update
[33mf0b49e8c[m recover SegmentedSuffixArray.chpl
[33m5b62eb50[m Merge pull request #11 from alvaradoo/main
[33m6f73480b[m Merge branch 'main' of https://github.com/alvaradoo/arkouda-njit into main
[33m90ed1b4a[m fix deleted file issues
[33m3b3fbf17[m Merge branch 'Bears-R-Us:main' into main
[33m24b545c6[m benchmark file modifications
[33m4ee7c992[m benchmark file mods
[33m330e367f[m test files modifications
[33m47a8e657[m benchmark file modifications
[33m733244bb[m Merge pull request #10 from alvaradoo/main
[33m07c0f3c5[m Merge branch 'Bears-R-Us:main' into main
[33m133cac32[m update max truss kMid value
[33m3d6ce1e6[m update truss test cases
[33mf0304dba[m update registration function
[33m34304d5f[m update max-truss method
[33mf7d507fb[m Merge branch 'Bears-R-Us:main' into main
[33mdcb671a3[m update
[33m1d09babd[m remove typo
[33me9f253ca[m format change
[33m1dd39309[m update readme
[33md4739868[m update Connected Componet's fast spread method
[33m391b36d4[m Merge branch 'Bears-R-Us:main' into main
[33m06ab2944[m remove the old graph_tri_cnt interface
[33m2cce174b[m add multiple components function in BFS
[33m61de848d[m test files modifications
[33m45391464[m Merge branch 'main' of https://github.com/alvaradoo/arkouda-njit into main
[33m45b21b71[m test files modifications
[33m458f85e0[m Merge branch 'Bears-R-Us:main' into main
[33mc2228ca9[m optimize code
[33m3a0eb4be[m benchmark file mods
[33m6a786eb9[m test files modifications
[33m9006dd0a[m added utils
[33mae2449b8[m Merge branch 'main' of https://github.com/alvaradoo/arkouda-njit into main
[33mcd427a75[m changes to aggregation -- not working
[33m4f45bf34[m Merge branch 'Bears-R-Us:main' into main
[33maf5e664e[m update bfs
[33m8ad29cf4[m recover the old triangle centrality method
[33mf9d0a5a6[m add a new fast spreading based connected component method
[33m7a5bd20d[m add aligned bfs method
[33m7d33550a[m update Jaccard method
[33mf709b952[m remove the bugs in GraphMsg for DomArray
[33m916aefba[m replace %f with %df
[33m26a3a7c0[m Merge branch 'Bears-R-Us:main' into main
[33m34726e4c[m get up to date with bears r us
[33mfec6b480[m update DomArray related code
[33med09a84a[m update the DomArray code method
[33mf14e1d25[m change the implementation of DomArray
[33me3b8f1ff[m fix CC issue and show beginnings of opt BFS
[33m974eb72d[m fix bugs in Jaccard
[33m2e3cb436[m update readme.md
[33meb2d9fea[m change assert
[33m8a1e4d66[m remove reverse method
[33md092aef8[m replace .high with .highBound
[33m6e3b6c9a[m change readline to readLine
[33m54fc8b98[m update jaccard function call type
[33ma5e32c87[m change function name
[33mf4355377[m add replicated modules
[33mc0e7af51[m remove bugs in Jaccard
[33m9ee6f798[m update the Jaccard method
[33m8cda2c9f[m update Jaccard code
[33m13439098[m use aligned array in Jaccard Coefficient
[33m33c1799d[m add the aligned neighbour and start_i arrays
[33mc9bdf96e[m add slurm ssh launcher job submit
[33m22c1f700[m fix server modules
[33ma1e3e120[m Delete __pycache__ directory
[33m514e3ba8[m Merge branch 'main' of https://github.com/alvaradoo/arkouda-njit into main
[33m494b657f[m corrected chapel warnings
[33m9eff4e99[m rename hash as siphash
[33mb33491ce[m add use ChplConfig
[33m77ae824c[m Merge pull request #9 from alvaradoo/main
[33m1aad5fcf[m add cc to arkouda-njit
[33m0355beab[m update based on master's changes of online module compiling
[33m3830eb18[m update the name of PathMerge
[33m3149439f[m update the test sequence of Truss Functions
[33mead611eb[m remove bug in triangle centrality
[33m839154dc[m add startserver.sh
[33m946b4060[m add configure benchmark and update truss code
[33m31332ded[m Merge pull request #8 from jtpatchett/main
[33m2ba9761b[m Merge branch 'main' into main
[33m2b9d7536[m Fix bug
[33m1a20a9d6[m Merge pull request #7 from ak47mrj/New_Triangle_Centrality
[33mad89234b[m fix triangle centrality bugs
[33m9b01b573[m Merge pull request #1 from Bears-R-Us/main
[33m1314fd3b[m optimize decomposition method
[33m7fe0a461[m add a simple Jaccard test
[33m43807655[m comment writeln
[33mbb4bb99e[m fix the upbound problem in Jaccard
[33m1cc86fc5[m fix function name
[33mbcf058f1[m fix function name
[33m86e07205[m use atomic for Jaccard Coefficient update
[33mc8dd7600[m fix jaccard bugs
[33mbb384162[m fix jaccard bugs
[33m4d532265[m add new graphfiles in rewritedata.py
[33mbc702fd2[m add max naive path merge test
[33m55385bfc[m Add List Intersection and test ready code
[33ma12c4ce5[m Update Small Set search
[33m14bd0418[m Added Smallset seq
[33m57ecf3d5[m fix the bug in ktrusspathmerge function
[33mf20ea11c[m Update PathMerge method
[33m5b6956ac[m Add Path Merge
[33m16057f5b[m fix one bug in jaccard function
[33m9eb5af36[m add non minimum search function and test
[33maa78d183[m fix the bug in jaccard
[33mfad5475c[m fix the bug in jaccard
[33mc77e42c9[m add triangle centrality test file
[33m3701ef32[m fix the bug in max truss function
[33m85e1301f[m Added MST to initial TC
[33m501aa634[m update based on latest arkouda and add more truss tests
[33m9c957797[m develop the code generation version and fix bugs in truss and trussmix algorithm
[33m791a3b64[m add more truss comparison algorithm
[33m8b31eb29[m update truss code
[33m4a416aa5[m add server script
[33m7d93c5cb[m add preprocessing
[33m21dc9e45[m fix mix truss code
[33maca53b50[m for check
[33md8a9523b[m fix some bugs
[33m1fdf2e40[m add client script
[33mfb2ba9d0[m  fix bugs in file preprocessing, add outputfile
[33meda9e426[m add file name information for reading
[33m07fdfd51[m add batch truss test
[33m29173825[m update Truss and TriCtr
[33m027d23b0[m remove bugs in tricentrality
[33me79108a9[m add the shutdown script
[33m9e85b318[m rewrite some  truss code
[33m2c15be87[m output debug in truss
[33m1caa3cc8[m add truss.py
[33ma55c9c33[m add missing files and fix some bugs
[33m6e280353[m fix bug
[33m5072175d[m update the readme
[33m9fb9b141[m update the directory
[33me66c5b37[m update readme
[33m28952985[m bug remove
[33ma70ba879[m bug remove
[33maef21384[m fix module name bugs
[33maa5ae164[m fix module name bugs
[33m4ee23f55[m Merge pull request #6 from Bears-R-Us/jaccard
[33mc252611d[m add jaccard algorithm based on the new main branch
[33m36b373db[m Merge pull request #5 from Bears-R-Us/triangle-centrality
[33mcbea5e3a[m update triangle centrality based on new main code
[33me7431d44[m fix the return string problem in graph query
[33me7e4e190[m fix combine_sort bug and BFS parameter bug
[33m3b08c287[m update graph.py
[33mb7cbf6ee[m update readme
[33m2143266b[m update readme
[33m676c2a1b[m update readme and directory
[33mf833ddef[m change format of readme
[33m914fbf7e[m change format of readme
[33m2a2e740e[m update readme
[33m1bae5e2d[m add benchmark directory
[33mce1c1196[m Merge pull request #3 from pierce314159/suffix_array
[33m10f95e70[m First pass at suffix_arrays in arkouda-njit
[33mdeea0cbe[m Merge pull request #2 from Bears-R-Us/multiple
[33m72c401e9[m Fixing issue with ensureClose usage.  Arkouda-core only accepts Files instead of a more generic case.  This adds a local proc to capture all cases.
[33m2a408460[m update some code based on Kyle's suggestions
[33mb8a9e5ee[m add triangle counting and Truss,copy GraphMsg to BFSMsg
[33m092da710[m Merge pull request #1 from Bears-R-Us/python-formatting-fixes
[33m3d943a4e[m Whitespace / formatting fixes for python code
[33m3eca2446[m Minor setup.py fixes.
[33m75d8827b[m Fix a typo in the README & set server-config.py to executable
[33m5ca65665[m fix conflict
[33m6c5c8586[m Initial commit
[33md61df4bc[m Fixing server-config.py option validation for arkouda.
[33m692fa451[m Adding README and renaming config.py to server-config.py
[33ma1fa8177[m Initial commit for building Arkouda Graph code as external repo.
